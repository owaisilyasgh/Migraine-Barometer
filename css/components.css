/* css/components.css */

/* Card Styles */
.m3-card {
    background-color: var(--m3-surface-container-low); /* M3 elevated card background */
    color: var(--m3-on-surface-variant); /* Default text color for card content */
    border-radius: var(--m3-shape-corner-md); /* 12px */
    padding: 16px; /* Standard M3 card padding */
    box-shadow: var(--m3-elevation-1); /* M3 elevation for cards */
    overflow: hidden; /* If content might overflow rounded corners, typically good for cards */
    display: flex; /* Added for flex-direction and potential alignment */
    flex-direction: column; /* Stack title and content vertically */
}

.m3-card__title {
    font: var(--m3-title-medium-font); /* M3 card title style */
    color: var(--m3-on-surface); /* Titles are typically more prominent */
    margin-bottom: 8px; /* Space between title and content */
    padding: 0; /* Padding is on parent card */
}

.m3-card__content {
    font: var(--m3-body-medium-font); /* M3 card content style */
    flex-grow: 1; /* Allows content to take available space if card has fixed height or flex parent */
}
.m3-card__content p { margin-top: 0; margin-bottom: 8px; }
.m3-card__content p:last-child { margin-bottom: 0; }


/* Button Styles */
.m3-button { font: var(--m3-label-large-font); color: var(--m3-primary); background-color: transparent; border: 1px solid transparent; min-height: 40px; padding: 0 24px; border-radius: var(--m3-shape-corner-full); cursor: pointer; display: inline-flex; align-items: center; justify-content: center; text-transform: none; transition: background-color 0.2s ease-out, box-shadow 0.2s ease-out, border-color 0.2s ease-out; position: relative; overflow: hidden; -webkit-tap-highlight-color: transparent; box-sizing: border-box; }
.m3-button:disabled, .m3-button[disabled] { opacity: 0.38; cursor: default; box-shadow: none !important; }
.m3-button-filled { background-color: var(--m3-primary); color: var(--m3-on-primary); box-shadow: var(--m3-elevation-0); }
.m3-button-filled:not(:disabled):hover { background-color: var(--m3-primary-container-hover); box-shadow: var(--m3-elevation-1); }
.m3-button-filled:not(:disabled):focus-visible { box-shadow: 0 0 0 2px var(--m3-primary-container); }
.m3-button-filled:disabled, .m3-button-filled[disabled] { background-color: rgba(var(--m3-on-surface-rgb), 0.12); color: rgba(var(--m3-on-surface-rgb), 0.38); }
.m3-button-text { padding: 0 12px; }
.m3-button-text:not(:disabled):hover { background-color: rgba(var(--m3-primary-rgb), 0.08); }
.m3-button-text:not(:disabled):focus-visible { background-color: rgba(var(--m3-primary-rgb), 0.12); }
.m3-button-text:disabled, .m3-button-text[disabled] { color: rgba(var(--m3-on-surface-rgb), 0.38); }
.m3-button-icon { padding: 8px; min-width: 40px; border-radius: var(--m3-shape-corner-full); }
.m3-button-icon .material-icons { font-size: 24px; color: var(--m3-primary); }
.m3-button-icon:disabled .material-icons, .m3-button-icon[disabled] .material-icons { color: rgba(var(--m3-on-surface-rgb), 0.38); }
.m3-ripple { position: absolute; border-radius: 50%; background-color: currentColor; opacity: 0.2; transform: scale(0); animation: m3-ripple-animation 0.6s linear; pointer-events: none; }

/* Select used in cards */
.m3-table-select { font: var(--m3-body-medium-font); color: var(--m3-on-surface); background-color: var(--m3-surface-container-lowest); border: 1px solid var(--m3-outline-variant); border-radius: var(--m3-shape-corner-xs); padding: 8px 32px 8px 12px; min-width: 120px; height: 40px; line-height: normal; width: 100%; appearance: none; background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23${'var(--m3-on-surface-variant-rgb)'.replace(/[^\w\s]/gi, '').replace(/\s/g, '').substring(0,6)}'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E"); background-repeat: no-repeat; background-position: right 10px center; background-size: 18px; box-sizing: border-box; flex-shrink: 0; }
.m3-table-select:focus { border-color: var(--m3-primary); outline: 2px solid transparent; box-shadow: 0 0 0 2px var(--m3-primary); }
.m3-table-select option { background-color: var(--m3-surface-container-highest); color: var(--m3-on-surface); }

/* Snackbar / Notification Styles */
.m3-snackbar-container { position: fixed; bottom: 16px; left: 50%; transform: translateX(-50%); z-index: 1000; display: flex; flex-direction: column-reverse; align-items: center; gap: 8px; width: fit-content; max-width: calc(100% - 32px); pointer-events: none; }
.m3-notification { background-color: var(--m3-inverse-surface); color: var(--m3-inverse-on-surface); padding: 14px 16px; border-radius: var(--m3-shape-corner-xs); box-shadow: var(--m3-elevation-3); font: var(--m3-body-medium-font); min-width: 288px; max-width: 568px; opacity: 0; transform: translateY(20px) scale(0.95); transition: opacity 0.3s ease-out, transform 0.3s ease-out; pointer-events: auto; }
.m3-notification.show { opacity: 1; transform: translateY(0) scale(1); }
.m3-notification.success { background-color: #4CAF50; color: white; }
.m3-notification.error { background-color: var(--m3-error-container); color: var(--m3-on-error-container); }
.m3-notification.info { background-color: var(--m3-tertiary-container); color: var(--m3-on-tertiary-container); }
.m3-notification.warning { background-color: #FF9800; color: black; }

/* Controls for Chart */
.chart-controls-card .automated-events-controls { display: flex; justify-content: space-between; align-items: center; gap: 12px; padding: 0; width: 100%; flex-wrap: nowrap; }
@media (max-width: 400px) { .chart-controls-card .automated-events-controls { flex-direction: column; align-items: flex-start; gap: 12px; } .chart-controls-card .automated-events-controls .return-to-current-btn { width: auto; align-self: flex-start; } }
.m3-toggle-switch-container { display: inline-flex; align-items: center; cursor: pointer; user-select: none; gap: 8px; position: relative; }
.m3-toggle-switch-input { position: absolute; opacity: 0; width: 0; height: 0; }
.m3-toggle-switch-label { position: relative; display: inline-block; width: 52px; height: 32px; }
.m3-toggle-switch-track { position: absolute; top: 0; left: 0; right: 0; bottom: 0; background-color: var(--m3-surface-container-highest); border: 2px solid var(--m3-outline); border-radius: 16px; transition: background-color 0.2s ease, border-color 0.2s ease; }
.m3-toggle-switch-thumb-container { position: absolute; left: 4px; top: 4px; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; transition: transform 0.2s ease-out; }
.m3-toggle-switch-thumb-container::before { content: ""; position: absolute; width: 40px; height: 40px; border-radius: 50%; background-color: var(--m3-on-surface); opacity: 0; transform: scale(0.8); transition: transform 0.2s ease-out, opacity 0.2s ease-out; }
.m3-toggle-switch-thumb { width: 16px; height: 16px; background-color: var(--m3-outline); border-radius: 50%; transition: width 0.2s ease-out, height 0.2s ease-out, background-color 0.2s ease; box-shadow: var(--m3-elevation-1); }
.m3-toggle-switch-input:checked + .m3-toggle-switch-label .m3-toggle-switch-track { background-color: var(--m3-primary); border-color: var(--m3-primary); }
.m3-toggle-switch-input:checked + .m3-toggle-switch-label .m3-toggle-switch-thumb-container { transform: translateX(20px); }
.m3-toggle-switch-input:checked + .m3-toggle-switch-label .m3-toggle-switch-thumb { width: 24px; height: 24px; background-color: var(--m3-on-primary); }
.m3-toggle-switch-input:checked + .m3-toggle-switch-label .m3-toggle-switch-thumb-container::before { background-color: var(--m3-primary); }
.m3-toggle-switch-input:not(:checked):hover + .m3-toggle-switch-label .m3-toggle-switch-thumb-container::before, .m3-toggle-switch-input:checked:hover + .m3-toggle-switch-label .m3-toggle-switch-thumb-container::before { opacity: var(--m3-hover-state-layer-opacity, 0.08); transform: scale(1); }
.m3-toggle-switch-input:focus-visible + .m3-toggle-switch-label .m3-toggle-switch-thumb-container::before, .m3-toggle-switch-input:checked:focus-visible + .m3-toggle-switch-label .m3-toggle-switch-thumb-container::before { opacity: var(--m3-focus-state-layer-opacity, 0.12); transform: scale(1); }
.m3-toggle-switch-text-label { font: var(--m3-label-large-font); color: var(--m3-on-surface); }
.chart-controls-card .return-to-current-btn { font: var(--m3-label-large-font); color: var(--m3-primary); padding: 0 12px 0 8px; min-height: 32px; }
.chart-controls-card .return-to-current-btn .material-icons { margin-right: 4px; font-size: 20px; vertical-align: middle; }


/* Event Carousel */
.focused-event-carousel-container { /* VIEWPORT */
    position: relative;
    overflow: hidden;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
}

.event-card-wrapper { /* SLIDING STRIP of card slots */
    display: flex;
    flex-grow: 1;
    height: calc(100% - 40px); /* Account for bottom controls height */
    transition: transform 0.3s ease-in-out;
}

.event-card { /* Each INDIVIDUAL card SLOT - this is the 100% wide element */
    width: 100%;
    flex-shrink: 0;
    height: 100%;
    display: flex; /* For centering the inner-container */
    align-items: center; /* Vertically center inner-container */
    justify-content: center; /* Horizontally center inner-container */
    /* Note: No background, padding, or shadow here. Those are on event-card-inner-container */
}

.event-card-inner-container { /* The actual VISIBLE card content */
    /* Base styles are from .m3-card, which is applied in JS */
    /* background-color, color, border-radius, box-shadow, padding are from .m3-card */
    width: 90%; /* Reduced width as requested */
    height: 95%; /* Slightly reduced height */
    max-width: 450px; /* Optional: cap width on very wide screens for aesthetics */
    
    display: flex; /* For its own content: title + scrollable area */
    flex-direction: column;
    overflow: hidden; /* Crucial for border-radius to clip internal scrollable content */
}

/* Severity borders apply to the inner-container, targeted via classes on parent .event-card */
.event-card.calm-period-card .event-card-inner-container {
    /* border-left: 4px solid var(--m3-outline-variant); /* Optional: if calm needs a marker */
}
.event-card.severity-low .event-card-inner-container { border-left: 4px solid var(--m3-primary); }
.event-card.severity-medium .event-card-inner-container { border-left: 4px solid #FF8C00; }
.event-card.severity-high .event-card-inner-container { border-left: 4px solid var(--m3-error); }
.event-card.severity-minimal .event-card-inner-container,
.event-card.severity-unknown .event-card-inner-container { border-left: 4px solid var(--m3-outline-variant); }

/* Active state: style the inner container when outer .event-card is active */
.event-card.event-card--active .event-card-inner-container {
    box-shadow: var(--m3-elevation-3); /* More pronounced shadow for active card */
    /* transform: scale(1.02); /* Optional: Slight scale up. Use with caution due to layout shifts */
}
/* Active severity borders (color might not need to change if already distinct) */
.event-card.event-card--active.severity-low .event-card-inner-container { border-left-color: var(--m3-primary); }
.event-card.event-card--active.severity-medium .event-card-inner-container { border-left-color: #FF8C00; }
.event-card.event-card--active.severity-high .event-card-inner-container { border-left-color: var(--m3-error); }
.event-card.event-card--active.severity-minimal .event-card-inner-container,
.event-card.event-card--active.severity-unknown .event-card-inner-container { border-left-color: var(--m3-outline); }


/* Content styling within the event-card-inner-container */
.event-card-inner-container > .m3-card__title {
    /* Inherits from .m3-card__title */
    /* padding: 0; /* Already set */
    margin-bottom: 6px; /* Tighter for card layout */
}

.event-card-inner-container > .m3-card__content { /* Scrollable content area */
    /* Inherits from .m3-card__content */
    overflow-y: auto;
    overflow-x: hidden;
    padding: 0 4px 0 0; /* Add slight right padding if scrollbar appears, to avoid overlap */
    font: var(--m3-body-small-font); /* Denser text */
    flex-grow: 1; /* Ensures it takes available space */
}

.event-card-inner-container > .m3-card__content p {
    margin-bottom: 6px;
}
.event-card-inner-container > .m3-card__content p strong {
    color: var(--m3-on-surface);
}
.event-card-inner-container .m3-table-select { /* Select inside scrollable area */
    margin-top: 8px;
}

.next-event-info {
    font-style: italic;
    opacity: 0.8;
}

.carousel-bottom-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 12px 0;
    width: 100%;
    flex-shrink: 0;
    height: 40px;
}

.carousel-dots-container {
    display: flex;
    justify-content: center; /* Center the group of dots */
    align-items: center; /* Align dots vertically */
    gap: 8px; /* Space between individual dots */
    flex-grow: 1; /* Allow dots container to take space if needed, e.g. in flex controls */
}

.carousel-dots-container .dot {
    width: 8px; /* Size of the dot */
    height: 8px; /* Size of the dot */
    border-radius: 50%; /* Make it circular */
    background-color: var(--m3-outline-variant); /* Color for INACTIVE dots - should be visible */
    border: none; /* Remove default button border */
    padding: 0; /* Remove default button padding */
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease; /* Smooth transitions */
}

.carousel-dots-container .dot:hover {
    background-color: var(--m3-on-surface-variant); /* Slightly darker/more prominent on hover for inactive dots */
}

.carousel-dots-container .dot.active {
    background-color: var(--m3-primary); /* Color for the ACTIVE dot */
    transform: scale(1.25); /* Make the active dot slightly larger */
}


/* Special State Cards (Rendered instead of carousel, not inside it) */
/* .event-card.special-state-card uses .m3-card base for elevation and padding */
.event-card.special-state-card {
    /* Already has .m3-card. These styles make it behave like a single, non-carousel card */
    border-left: none !important; /* Override any severity border for these */
    width: calc(100% - 16px); /* Full width minus some margin */
    margin: 8px; /* Centering via parent flex or auto margins isn't primary here */
    /* height: auto; /* Content driven height */
}

.event-card.special-state-card > .m3-card__content {
    overflow-y: visible; /* No internal scroll needed */
    text-align: center;
}

.event-card.special-state-card .m3-card__title { margin-bottom: 10px; text-align: center; }
.event-card.special-state-card.warning { background-color: var(--m3-tertiary-container-semitransparent); }
.event-card.special-state-card.warning .m3-card__title { color: var(--m3-on-tertiary-container); }
.event-card.special-state-card.error { background-color: var(--m3-error-container-semitransparent); }
.event-card.special-state-card.error .m3-card__title { color: var(--m3-on-error-container); }

.event-card.special-state-card #refreshDataButton.m3-button-filled { margin-top: 12px; }
.event-card.special-state-card.warning #refreshDataButton.m3-button-filled { background-color: var(--m3-tertiary); color: var(--m3-on-tertiary); }
.event-card.special-state-card.error #refreshDataButton.m3-button-filled { background-color: var(--m3-error); color: var(--m3-on-error); }

/* filename: css/components.css */